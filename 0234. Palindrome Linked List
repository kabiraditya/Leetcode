# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        slow = ListNode
        fast = ListNode
        slow = fast = head
        
        while(fast!=None and fast.next!=None):
            fast = fast.next.next
            slow = slow.next
        temp = None
        while(slow):
            n1 = ListNode
            n1 = slow.next
            slow.next = temp
            temp = slow
            slow = n1
        while(temp):
            if(temp.val!=head.val): return False
            temp=temp.next
            head=head.next
        return True
